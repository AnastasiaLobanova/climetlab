name: Check only

on:
  push:
    branches: [ master ]

jobs:
  checks:
    strategy:
      matrix:
        platform: ["ubuntu-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9"]

    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: |
          pip install black sphinx pytest pytest-cov flake8 isort
          pip install -r docs/requirements.txt

      - name: Code QA
        run: |
          black --version
          isort --profile=black .
          black --check .
          flake8 .

      - name: Flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Tokens
        shell: python
        env:
          ECMWFAPIRC: ${{ secrets.ECMWFAPIRC }}
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          import os
          for n in ('ECMWFAPIRC', 'CDSAPIRC'):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print(os.environ[n], file=f)

      - name: Tests
        run: |
          python setup.py develop
          pip freeze
          pytest
        env:
          CLIMETLAB_DEBUG: 1
          CLIMETLAB_SKIP_NOTEBOOKS_TESTS: 1
